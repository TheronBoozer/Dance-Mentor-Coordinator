import re

from Scheduling.When2Meet import When2Meet
from Scheduling.Schedule import Schedule

class Session_Request:
    """
    An object to hold detailing of session requests including a schedule
    """



    # //////////////////////////////////////////////////////////////////////////////////////////////////////////
    # //////////////////////////////////////////////////////////////////////////////////////////////////////////
    # ////////////////////////////////////////*   INITIALIZER   *///////////////////////////////////////////////
    # //////////////////////////////////////////////////////////////////////////////////////////////////////////
    # //////////////////////////////////////////////////////////////////////////////////////////////////////////

    def __init__(self, information):
        self.participants = information[1]
        self.schedule = Schedule()

        self.emails = self.__parse_emails(information[2])
        self.phone_numbers = self.__parse_phone_numbers(information[3])

        self.when2meet = When2Meet(information[4])
        self.schedule.change_availability(self.when2meet)

        self.level = information[6]
        self.topic = f"{information[5]} - {information[7]} : {information[8]}"
        self.description = information[9]
        self.mentor_preference = information[10].split(", ")
        self.assistant_mentor = information[11] == "Yes"
        


    
    # //////////////////////////////////////////////////////////////////////////////////////////////////////////
    # //////////////////////////////////////////////////////////////////////////////////////////////////////////
    # //////////////////////////////////////*   PRIVATE_METHODS   */////////////////////////////////////////////
    # //////////////////////////////////////////////////////////////////////////////////////////////////////////
    # //////////////////////////////////////////////////////////////////////////////////////////////////////////

    def __parse_emails(self, email_string : str):
        emails = re.findall(r"([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)", email_string)

        return emails

    def __parse_phone_numbers(self, phone_string : str):
        numbers = re.findall(r"(\d{3}[-\.\s]??\d{3}[-\.\s]??\d{4}|\(\d{3}\)\s*\d{3}[-\.\s]??\d{4}|\d{3}[-\.\s]??\d{4})", phone_string)

        print(numbers)
